# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import webhook_service_pb2 as webhook__service__pb2

GRPC_GENERATED_VERSION = '1.66.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in webhook_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class WebhookServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetWebhooks = channel.unary_unary(
                '/webhook.WebhookService/GetWebhooks',
                request_serializer=webhook__service__pb2.GetWebhooksRequest.SerializeToString,
                response_deserializer=webhook__service__pb2.GetWebhooksResponse.FromString,
                _registered_method=True)
        self.CreateWebhook = channel.unary_unary(
                '/webhook.WebhookService/CreateWebhook',
                request_serializer=webhook__service__pb2.CreateWebhookRequest.SerializeToString,
                response_deserializer=webhook__service__pb2.Webhook.FromString,
                _registered_method=True)
        self.GetWebhook = channel.unary_unary(
                '/webhook.WebhookService/GetWebhook',
                request_serializer=webhook__service__pb2.GetWebhookRequest.SerializeToString,
                response_deserializer=webhook__service__pb2.Webhook.FromString,
                _registered_method=True)
        self.UpdateWebhook = channel.unary_unary(
                '/webhook.WebhookService/UpdateWebhook',
                request_serializer=webhook__service__pb2.UpdateWebhookRequest.SerializeToString,
                response_deserializer=webhook__service__pb2.Webhook.FromString,
                _registered_method=True)
        self.DisableWebhook = channel.unary_unary(
                '/webhook.WebhookService/DisableWebhook',
                request_serializer=webhook__service__pb2.DisableWebhookRequest.SerializeToString,
                response_deserializer=webhook__service__pb2.DisableWebhookResponse.FromString,
                _registered_method=True)


class WebhookServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetWebhooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WebhookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetWebhooks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWebhooks,
                    request_deserializer=webhook__service__pb2.GetWebhooksRequest.FromString,
                    response_serializer=webhook__service__pb2.GetWebhooksResponse.SerializeToString,
            ),
            'CreateWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWebhook,
                    request_deserializer=webhook__service__pb2.CreateWebhookRequest.FromString,
                    response_serializer=webhook__service__pb2.Webhook.SerializeToString,
            ),
            'GetWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWebhook,
                    request_deserializer=webhook__service__pb2.GetWebhookRequest.FromString,
                    response_serializer=webhook__service__pb2.Webhook.SerializeToString,
            ),
            'UpdateWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWebhook,
                    request_deserializer=webhook__service__pb2.UpdateWebhookRequest.FromString,
                    response_serializer=webhook__service__pb2.Webhook.SerializeToString,
            ),
            'DisableWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableWebhook,
                    request_deserializer=webhook__service__pb2.DisableWebhookRequest.FromString,
                    response_serializer=webhook__service__pb2.DisableWebhookResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'webhook.WebhookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('webhook.WebhookService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WebhookService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetWebhooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/webhook.WebhookService/GetWebhooks',
            webhook__service__pb2.GetWebhooksRequest.SerializeToString,
            webhook__service__pb2.GetWebhooksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/webhook.WebhookService/CreateWebhook',
            webhook__service__pb2.CreateWebhookRequest.SerializeToString,
            webhook__service__pb2.Webhook.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/webhook.WebhookService/GetWebhook',
            webhook__service__pb2.GetWebhookRequest.SerializeToString,
            webhook__service__pb2.Webhook.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/webhook.WebhookService/UpdateWebhook',
            webhook__service__pb2.UpdateWebhookRequest.SerializeToString,
            webhook__service__pb2.Webhook.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisableWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/webhook.WebhookService/DisableWebhook',
            webhook__service__pb2.DisableWebhookRequest.SerializeToString,
            webhook__service__pb2.DisableWebhookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
