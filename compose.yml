version: '3.8'

services:
  # Webhook service
  merchant-integration-service:
    container_name: merchant-integration-service
    image: merchant-integration-service:1.0.0
    build:
      context: ./backend/merchant-integration-service
      dockerfile: merchant-integration.dockerfile
    ports:
      - "50051:50051"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=api_key_service_db
    volumes:
      - ./backend/merchant-integration-service:/app
    depends_on:
      - db

  loan-service:
    container_name: loan-service
    image: loan-service:1.0.0
    build:
      context: ./backend/loan-service
      dockerfile: loan.dockerfile
    ports:
      - "50052:50051"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=loan_service_db
    volumes:
      - ./backend/loan-service:/app
    depends_on:
      - db

  # New user-service
  user-service:
    container_name: user-service
    image: user-service:1.0.0
    build:
      context: ./backend/user-service
      dockerfile: user.dockerfile
    ports:
      - 4001:4000
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/user_service_db
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ./backend/user-service:/app
    depends_on:
      - db

  # API Gateway service
  api-gateway:
    container_name: api-gateway
    image: api-gateway:1.0.0
    build:
      context: .
      dockerfile: ./backend/api-gateway/api_gateway.dockerfile
    ports:
      - 8080:8080
    environment:
      - JWT_SECRET=your-secret-key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=yourredispassword
    volumes:
      - ./backend/api-gateway:/app  # Mount local backend directory to the container for hot reload
    depends_on:
      - redis
      - db
      - merchant-integration-service

  # db service
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      
  # Add this new Redis service
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass yourredispassword
    volumes:
      - redis_data:/data

  # nextjs service
  # nextapp:
  #   container_name: nextapp
  #   image: nextapp:1.0.0
  #   build:
  #     context: ./example-merchant-frontend
  #     dockerfile: next.dockerfile
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://api-gateway:8080
  #   depends_on:
  #     - api-gateway

volumes:
  pgdata: {}
  redis_data: {}  # Add this new volume for Redis data persistence